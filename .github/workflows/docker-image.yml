# To configure this workflow:
#
# 1. Create a Docker Personal access token and Azure Service Principal with __________ permissions.
# 2. Add secrets to Github repository
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy a container to an Azure Web App

env:
  AZURE_WEBAPP_NAME: skyviz
  DOCKER_USERNAME: fpvian
  REPO: fpvian/sky-viz-skyviz

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - uses: azure/container-actions/docker-login@v1  # replace
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: docker.io/${{ env.REPO }}:${{ github.sha }}
          file: ./deployment/skyviz.Dockerfile

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Authenticate using a Service Principal
        uses: azure/actions/login@v1
        with:
          creds: ${{ secrets.AZURE_SP }}

      - name: Update image tag on Azure Web App
        if: github.event_name != 'pull_request'
        uses: azure/webapps-container-deploy@v1  # update to webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: '${{ env.REPO }}:${{ github.sha }}'
